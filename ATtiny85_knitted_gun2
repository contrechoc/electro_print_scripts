//script for electro prints - exhibition Galerie de Maaskoe Rotterdam
//2020 Beam Contrechoc
//ATtiny85

#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
#include <avr/power.h>
#endif

#define PIN 0

Adafruit_NeoPixel strip = Adafruit_NeoPixel(9, PIN, NEO_RGB);

int counter = 24;

void setup() {

  strip.begin();
  strip.show(); // Initialize all pixels to 'off'

  rainbow(10);

}

void loop() {

  colorWipe(strip.Color(0, 0, 0), 0); // black
  delay(50 + random(7500));
  for (int nu = 0; nu < random(9); nu++)
  {
    if ( random(2) == 0 )
    {
      strip.setPixelColor(random(9), strip.Color(random(255), random(255), random(255)));  strip.show();
      delay(10 + random(10));
    }
    else
    {
      int whichPixel = random(9);

      for ( int sun = 0; sun < random(255) ; sun += 5)
      {
        int whichColor = random(7);
        if ( whichColor == 0)
        {
          strip.setPixelColor(whichPixel, strip.Color(sun, 0, 0));
          strip.show();
        }
        else if ( whichColor == 1)
        {
          strip.setPixelColor(whichPixel, strip.Color(0, sun, 0));
          strip.show();
        }
        else if ( whichColor == 2)
        {
          strip.setPixelColor(whichPixel, strip.Color(0, 0, sun));
          strip.show();
        }
        else if ( whichColor == 3)
        {
          strip.setPixelColor(whichPixel, strip.Color(sun, sun, 0));
          strip.show();
        }
        else if ( whichColor == 4)
        { strip.setPixelColor(whichPixel, strip.Color(0, sun, sun)); strip.show();
        }
        else if ( whichColor == 5)
        {
          strip.setPixelColor(whichPixel, strip.Color(sun, 0, sun));
          strip.show();
        }
        delay(25 + random(25));
      }
    }
  }


  if ( random(10) == 0 )
  {
    rainbow(5 + random(15));
  }

  if ( random(10) == 1 )
  {
    colorWipe(strip.Color(0, 0, 0), 0); // black
    colorStep(strip.Color(255, 0, random(10)),  0);
    counter--;
    if ( counter < 0 ) counter = 2000;
    strip.setPixelColor(counter % 16, strip.Color(0, 0, 255)); strip.show();
    delay(800 + random(200));
    colorWipe(strip.Color(0, 0, 0), 0); // black
    colorStep(strip.Color(55, random(10), 0),  1);
    strip.setPixelColor(counter % 24, strip.Color(0, 0, 255)); strip.show();
    delay(800 + random(200));

    if ( random(25) == 2 )
    {
      colorWipe(strip.Color(0, 0, 0), 0);
      for ( int sun = 0; sun < 255 ; sun += 5)
      {
        colorWipe(strip.Color(sun, sun / 2, 0), 0);
        delay(25 + random(25));
      }
      delay(1000);
      for ( int sun = 255; sun > 0 ; sun -= 5)
      {
        colorWipe(strip.Color(sun, sun / 2, 0), 0);
        delay(25 + random(25));
      }
      delay(1000);
    }
  }
}

// Fill the dots one after the other with a color
void colorStep(uint32_t c,  int stepStart) {
  for (uint16_t i = stepStart; i < strip.numPixels(); i += 2) {
    strip.setPixelColor(i, c);
  }
  strip.show();
}

// Fill the dots one after the other with a color
void colorWipe(uint32_t c, uint8_t wait) {
  for (uint16_t i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, c);
    strip.show();
    delay(wait);
  }
}

void rainbow(uint8_t wait) {
  uint16_t i, j;

  for (j = 0; j < 256; j++) {
    for (i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, Wheel((i + j) & 255, 3));
    }
    strip.show();
    delay(wait);
  }
}

// Slightly different, this makes the rainbow equally distributed throughout
void rainbowCycle(uint8_t wait) {
  uint16_t i, j;

  for (j = 0; j < 256 * 5; j++) { // 5 cycles of all colors on wheel
    for (i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) & 255, 1));
    }
    strip.show();
    delay(wait);
  }
}

//Theatre-style crawling lights.
void theaterChase(uint32_t c, uint8_t wait) {
  for (int j = 0; j < 10; j++) { //do 10 cycles of chasing
    for (int q = 0; q < 3; q++) {
      for (uint16_t i = 0; i < strip.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, c);  //turn every third pixel on
      }
      strip.show();

      delay(wait);

      for (uint16_t i = 0; i < strip.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, 0);      //turn every third pixel off
      }
    }
  }
}

//Theatre-style crawling lights with rainbow effect
void theaterChaseRainbow(uint8_t wait) {
  for (int j = 0; j < 256; j++) {   // cycle all 256 colors in the wheel
    for (int q = 0; q < 3; q++) {
      for (uint16_t i = 0; i < strip.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, Wheel( (i + j) % 255, 1)); //turn every third pixel on
      }
      strip.show();

      delay(wait);

      for (uint16_t i = 0; i < strip.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, 0);      //turn every third pixel off
      }
    }
  }
}

// Input a value 0 to 255 to get a color value.
// The colours are a transition r - g - b - back to r.
uint32_t Wheel(byte WheelPos, int weight) {
  WheelPos = 255 - WheelPos;
  if (WheelPos < 85) {
    return strip.Color((255 - WheelPos * 3) / weight, 0, (WheelPos * 3) / weight);
  }
  if (WheelPos < 170) {
    WheelPos -= 85;
    return strip.Color(0, (WheelPos * 3) / weight, (255 - WheelPos * 3) / weight);
  }
  WheelPos -= 170;
  return strip.Color((WheelPos * 3) / weight, (255 - WheelPos * 3) / weight, 0);
}
